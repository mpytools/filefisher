[project]
name = "filefisher"
authors = [{name = "filefisher developers", email = "mathias.hauser@env.ethz.com"}]
license = "MIT"
keywords = ['path folder parse']
description = "find and parse file and folder names"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
    "numpy >=1.24",
    "pandas >= 2.0",
    "parse >= 1.19",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/mpytools/filefisher"
Documentation = "https://filefisher.readthedocs.io/en/latest/"
Source = "https://github.com/mpytools/filefisher"
BugReports = "https://github.com/mpytools/filefisher/issues"

[dependency-groups]
docs = [
    "ipython",
    "numpydoc",
    "sphinx",
    "sphinx-book-theme",
    "myst-parser",
]
tests = [
    "pytest-cov",
    "pytest-xdist",
    "pytest",
]
dev = [
    {include-group = "docs"},
    {include-group = "tests"},
    "black !=23",
    "ruff",
]

[tool.setuptools.packages]
find = {namespaces = false}  # Disable implicit namespaces

[build-system]
requires = [
    "setuptools>=42",
    "setuptools_scm>=7.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
fallback_version = "999"
version_scheme = "no-guess-dev"

[tool.ruff]
# also check notebooks
extend-include = ["*.ipynb"]
target-version = "py310"

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let the formatter worry about this
# E731: do not assign a lambda expression, use a def
ignore = [
  "E402",
  "E501",
  "E731",
]
select = [
  "F", # Pyflakes
  "E", # Pycodestyle
  "W", # warnings
  "I", # isort
  "UP", # Pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["filefisher"]


[tool.typos]

[tool.typos.default]
extend-ignore-identifiers-re = [
  "varn",
]

[tool.coverage.run]
omit = [
  "*/filefisher/tests/*",
]
